02789,string만으로 for문 돌리기/to_string은 int를 string으로 바꾸는 것:
05717,done
07891,done
11006,기존 int로 for문 돌리기
14645,반복문
20332,done
20361,for문에 for문 내에 써야할 변수는 쓰지 말껏(반복 횟수에 영향을 줌)
20673,done
06376,분수 계산후 형 변환시 분수 감싸지 말것(int로 되버림)/cout.precision(n):cout에서 소수점자리를 최대 n자리 까지 출력/cout.setf(ios::showpoint);소수점 뒷자리의 0표시
10419,sqrt 함수는 cmath 라이브러리에 있음
01731,일반array는 append 불가/append하고 싶으면 vector로 만들고 push_back()/n번 반복을 --로 구현할시 (n;n>0;n--)
02386,string으로 뛰어쓰기 있는 문장 입력하고 싶으면 getline이용/string을 소문자로 바꿀 경우 algorithm에 있는 transform을 이용할수 있음;이때 tolower앞에 반드시 ::붙일것
03047,char로 문자열 받을 경우 반드시 칸수를 (문자열길이)+1으로 할 것
05704,char도 증감 연산 가능/string에서 문자 수를 셀때는 algorithm에 있는 count 함수 이용
01264,count  함수
06322,cout << fixed; 소숫점 자리만 precision 함수를 먹도록 함.
05032,none?
02736,string length
02744,c++에 python의 swapcase 명령어는 없음. 그러나 그 외의 tolower나 islower 같은 명령어는 있음.
01568,증감연산자를 조건문 등에서 조건으로 쓰지 말것.조건에서도 식이 계산되버림.
01094,나눗셈으로도 for문을 돌릴수 있음.
02145,%연산자는 반드시 int 끼리만 연산 가능.cmath의 log10를 이용하면 쉽게 숫자의 자리수를 알 수 있음. 
01259,string을 이등분하게 되면 length가 짝수일시 0~len/2와 len/2+1~len-1로;홀수일시 0~len/2-1와 len/2+1~len-1
02869,c++에서 0.xx초는 반복문을 넣지만 않으면 조건문 몇개정도는 충분히 돌아간다.
